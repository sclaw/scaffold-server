image: docker:latest

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:docker
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  GIT_SUBMODULE_STRATEGY: normal
  STACK_ROOT: /builds/.stack
  
stages:
  - build_haskell
  - build_image
  - deploy

services:
  - docker:dind

haskell:
  stage: build_haskell
  #image: haskell
  image: nixos/nix:latest
  script:
    - nix-env -iA nixpkgs.gitAndTools.gitFull
    - nix-env -iA nixpkgs.gnutar
    - nix-env -iA nixpkgs.python3
    - export PATH="$PATH:/usr/local/bin:/builds/edgenode2/server/bin"
    - wget -qO- https://get.haskellstack.org/ | sh
    - stack install ghc-8.6.5
    - git submodule update --init
    - stack install --fast -j12 proto3-suite
    - scripts/generate-proto-haskell_python.sh
  cache:
    paths:
      - /builds/.stack
  artifacts:
    paths:
      - /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  environment:
    name: $CI_JOB_NAME
    url: http://$CI_JOB_NAME

build:
  stage: build_image
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cd /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
    - docker build -t ${IMAGE_TAG} .
    - docker tag ${IMAGE_TAG} ${IMAGE_TAG_LATEST} 
    - docker push ${IMAGE_TAG}
    - docker push ${IMAGE_TAG_LATEST}
  artifacts:
    paths:
      - /builds/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  #only:
  #  - tags

deploy-prod:
  stage: deploy
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
  when: manual
  script:
    - docker pull $IMAGE_TAG_LATEST
    - echo "IMAGE_TAG"="$IMAGE_TAG" > .env
    - docker-compose stop server server-db
    - docker-compose rm -f -v edge-node-server-db edge-node-server
    - docker-compose up -d
  environment:
    name: Production
    url: https://edgenode.org
  tags:
    - docker-prod
  #only:
  #  - tags
